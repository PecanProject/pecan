name: CI

on: push

env:
  # Would be more usual to set R_LIBS_USER, but R uses R_LIBS first if present
  # ...and it's always present here, because the rocker/tidyverse base image
  # checks at R startup time for R_LIBS and R_LIBS_USER, sets both if not found
  R_LIBS: ~/R/library
  _R_CHECK_LENGTH_1_CONDITION_: true
  _R_CHECK_LENGTH_1_LOGIC2_: true
  # Avoid compilation check warnings that come from the system Makevars, not us
  # See https://stat.ethz.ch/pipermail/r-package-devel/2019q2/003898.html
  _R_CHECK_COMPILATION_FLAGS_KNOWN_: -Wformat -Werror=format-security -Wdate-time

jobs:

  build:
    runs-on: ubuntu-latest
    container: infotroph/pecan-depends:latest
    steps:
    - uses: actions/checkout@v2
    - run: mkdir -p "${HOME}${R_LIBS#'~'}"
    - name: cache R packages
      uses: actions/cache@v1
      with:
        key: pkgcache-${{ github.sha }}
        path: ${{ env.R_LIBS }}
        restore-keys: |
          pkgcache-
    - name: cache .doc
      uses: actions/cache@v1
      with:
        key: doc-${{ github.sha }}
        path: .doc
    - name: cache .install
      uses: actions/cache@v1
      with:
        key: install-${{ github.sha }}
        path: .install
    - name: build
      run: make -j1
      env:
        NCPUS: 2
        CI: true
    - name: check for out-of-date Rd files
      uses: infotroph/tree-is-clean@v1

  test:
    needs: build
    runs-on: ubuntu-latest
    container: infotroph/pecan-depends:latest
    services:
      postgres:
        image: mdillon/postgis:9.5
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      NCPUS: 2
      PGHOST: postgres
      CI: true
    steps:
    - uses: actions/checkout@v2
    - name: install utils
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client postgresql-client curl
    - name: db setup
      run: scripts/setup_testing_db.sh
    - run: mkdir -p "${HOME}${R_LIBS#'~'}"
    - name: cache R packages
      uses: actions/cache@v1
      with:
        key: pkgcache-${{ github.sha }}
        path: ${{ env.R_LIBS }}
        restore-keys: |
          pkgcache-
    - name: cache .doc
      uses: actions/cache@v1
      with:
        key: doc-${{ github.sha }}
        path: .doc
    - name: cache .install
      uses: actions/cache@v1
      with:
        key: install-${{ github.sha }}
        path: .install
    - name: test
      run: make test

  check:
    needs: build
    runs-on: ubuntu-latest
    container: infotroph/pecan-depends:latest
    env:
      NCPUS: 2
      CI: true
    steps:
    - uses: actions/checkout@v2
    - name: install ssh
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client qpdf
    - run: mkdir -p "${HOME}${R_LIBS#'~'}"
    - name: cache R packages
      uses: actions/cache@v1
      with:
        key: pkgcache-${{ github.sha }}
        path: ${{ env.R_LIBS }}
        restore-keys: |
          pkgcache-
    - name: cache .doc
      uses: actions/cache@v1
      with:
        key: doc-${{ github.sha }}
        path: .doc
    - name: cache .install
      uses: actions/cache@v1
      with:
        key: install-${{ github.sha }}
        path: .install
    - name: check
      run: make check
      env:
        REBUILD_DOCS: "FALSE"
        RUN_TESTS: "FALSE"

  sipnet:
    needs: build
    runs-on: ubuntu-latest
    container: infotroph/pecan-depends:latest
    services:
      postgres:
        image: mdillon/postgis:9.5
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      PGHOST: postgres
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt-get update && sudo apt-get install -y curl postgresql-client
    - name: install sipnet
      run: |
        cd ${HOME}
        curl -o sipnet_unk.tar.gz http://isda.ncsa.illinois.edu/~kooper/EBI/sipnet_unk.tar.gz
        tar zxf sipnet_unk.tar.gz
        cd sipnet_unk
        make
    - name: db setup
      run: scripts/setup_testing_db.sh
    - run: mkdir -p "${HOME}${R_LIBS#'~'}"
    - name: cache R packages
      uses: actions/cache@v1
      with:
        key: pkgcache-${{ github.sha }}
        path: ${{ env.R_LIBS }}
        restore-keys: |
          pkgcache-
    - name: integration test
      run: ./tests/integration.sh ghaction
