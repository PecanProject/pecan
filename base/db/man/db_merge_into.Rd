% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_merge_into.R
\name{db_merge_into}
\alias{db_merge_into}
\title{Merge local data frame into SQL table}
\usage{
db_merge_into(values, table, con, by = NULL, drop = FALSE, ...)
}
\arguments{
\item{values}{`data.frame` of values to write to SQL database}

\item{table}{Name of target SQL table, as character}

\item{con}{database connection object}

\item{by}{Character vector of columns by which to perform merge. Defaults to all columns in `values`}

\item{drop}{logical. If `TRUE` (default), drop columns not found in SQL table.}

\item{...}{Arguments passed on to \code{insert_table}
\describe{
  \item{values}{`data.frame` of values to write to SQL database}
  \item{table}{Name of target SQL table, as character}
  \item{coerce_col_class}{logical, whether or not to coerce local data columns 
to SQL classes. Default = `TRUE.`}
  \item{drop}{logical. If `TRUE` (default), drop columns not found in SQL table.}
  \item{con}{database connection object}
}}
}
\value{
Data frame: Inner join of SQL table and input data frame (as unevaluated "lazy query" table)
}
\description{
Merge local data frame into SQL table
}
\examples{
irisdb <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
dplyr::copy_to(irisdb, iris[1:10,], name = "iris", overwrite = TRUE)
db_merge_into(iris[1:12,], "iris", irisdb)
dplyr::tbl(irisdb, "iris") \%>\% dplyr::count()
}
