% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/status.R
\name{status}
\alias{status}
\alias{status.start}
\alias{status.end}
\alias{status.skip}
\alias{status.check}
\title{PEcAn workflow status tracking}
\usage{
status.start(name, file = NULL)

status.end(status = "DONE", file = NULL)

status.skip(name, file = NULL)

status.check(name, file = NULL)
}
\arguments{
\item{name}{one-word description of the module being checked or recorded,
e.g. "TRAIT", "MODEL", "ENSEMBLE"}

\item{file}{path to status file.
If NULL, taken from \code{settings} (see details)}

\item{status}{one-word summary of the module result, e.g. "DONE", "ERROR"}
}
\value{
For \code{status.start}, \code{status.end}, and \code{status.skip}: NULL, invisibly

For \code{status.check}, an integer:
0 if module not run, 1 if done, -1 if error
}
\description{
Records the progress of a PEcAn workflow by writing statuses and timestamps
to a STATUS file. Use these each time a module starts, finishes,
or is skipped.
}
\details{
All of these functions write to or read from a STATUS file in your run's
output directory. If the file is not specified in the call, they will look
for a \code{settings} object in the global environment and use
\code{<settings$outdir>/STATUS} if possible.

Since the status functions may be called inside error-handling routines,
it's important that they not produce new errors of their own. Therefore
if the output file doesn't exist or is not writable, rather than complain
the writer functions (\code{status.start}, \code{status.end}, \code{status.skip}) will
print to the console and \code{status.check} will simply return 0.
}
\section{Functions}{
\itemize{
\item \code{status.start}: Record module start time

\item \code{status.end}: Record module completion time and status

\item \code{status.skip}: Record that module was skipped

\item \code{status.check}: Look up module status from file
}}

\author{
Rob Kooper
}
