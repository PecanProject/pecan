* using log directory ‘/tmp/Rtmp6InlXl/PEcAn.utils.Rcheck’
* using R version 4.0.2 (2020-06-22)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* using options ‘--no-tests --no-manual --as-cran’
* checking for file ‘PEcAn.utils/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘PEcAn.utils’ version ‘1.7.1’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... WARNING
Requires orphaned package: ‘udunits2’

Package suggested but not available for checking: ‘PEcAn.DB’
* checking package dependencies ... NOTE
Package suggested but not available for checking: ‘PEcAn.DB’
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘PEcAn.utils’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... NOTE
Authors@R field gives no person with name and roles.
Authors@R field gives no person with maintainer role, valid email
address and non-empty name.
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
convert.input: no visible binding for global variable ‘settings’
convert.input: no visible binding for global variable ‘id’
convert.input : log_format_df: no visible binding for global variable
  ‘.’
grid2netcdf: no visible binding for global variable ‘years’
grid2netcdf: no visible binding for global variable ‘yieldarray’
mcmc.list2init: no visible binding for global variable ‘nr’
read.sa.output: no visible binding for global variable ‘runs.samples’

Undefined global functions or variables:
  . nr runs.samples settings years yieldarray
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘trait.dictionary’
Undocumented data sets:
  ‘trait.dictionary’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... WARNING
Argument items with no description in Rd object 'get.sa.sample.list':
  ‘env’

* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... SKIPPED
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE

Status: 2 WARNINGs, 3 NOTEs
See
  ‘/tmp/Rtmp6InlXl/PEcAn.utils.Rcheck/00check.log’
for details.