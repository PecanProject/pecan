<?xml version="1.0"?>
<pecan>
  <outdir>/home/carya/scratch/run-1/</outdir>

  <database>
    <bety>
      <user>bety</user>
      <password>bety</password>
      <host>localhost</host>
      <dbname>bety</dbname>
      <driver>PostgreSQL</driver>
      <write>FALSE</write>
    </bety>
  </database>

  <pfts>
    <pft>
      <name>CMT04-Salix</name>
      <constants>
        <num>1</num>
      </constants>
    </pft>
  </pfts>

  <!--
  The meta analysis uses the bety database to try to pick
  informed values for various parameters.
  -->
  <meta.analysis>
    <iter>3000</iter>
    <random.effects>FALSE</random.effects>
  </meta.analysis>


  <!--
  Ensemble runs are done with parameters that are pulled from
  the results of the meta analysis. Many runs are performed and
  the outputs are analyzed to see the "spread" as a result of
  varying model input parameters.
  -->
  <ensemble>
    <size>1</size>
    <variable>NPP</variable>
    <!--
    <start.year>1995</start.year>
    <end.year>2000</end.year>
    -->
  </ensemble>

  <!--
  Sensitivity Analysis modifes each parameter in turn and then
  can tell us how much the model may vary based on the changes in
  the input parameters.
  -->
  <!--
  <sensitivity.analysis>
    <quantiles>
      <sigma>0</sigma>
    </quantiles>
    <variable>NPP</variable>
  </sensitivity.analysis>
  -->
  <!--
  The model section contains special tags for controlling
  the model being run. As per discussion on PEcAn Slack channel,
  these special tags are the best way to add user control to the
  web interface for items that do not fit nicely with the 
  pre-existing web interface buttons/dropdowns.
  -->
  <model>
    <type>dvmdostem</type>
    <binary>/home/carya/dvm-dos-tem/dvmdostem</binary>

    <dvmdostem_site>/home/carya/dvm-dos-tem/DATA/SewardPen_10x10</dvmdostem_site>
    <dvmdostem_pixel_y>2</dvmdostem_pixel_y> <!-- Remember R uses 1 based indexing! -->
    <dvmdostem_pixel_x>2</dvmdostem_pixel_x>

    <!-- Set the number of years each stage of dvmdostem will run. -->
    <dvmdostem_prerun>2</dvmdostem_prerun>
    <dvmdostem_equil>4</dvmdostem_equil>
    <dvmdostem_spinup>6</dvmdostem_spinup>
    <dvmdostem_transient>109</dvmdostem_transient>
    <dvmdostem_scenerio>91</dvmdostem_scenerio>

    <!-- Set the log level verbosity for dvmdostem.
    It is not reccomended to use anything more verbose than 'warn'. -->
    <dvmdostem_loglevel>err</dvmdostem_loglevel>

    <!-- Useful to enable all calibration variables at once, takes 
    precedence over  dvmdostem_pecan_outputs. String, must be one of: 
    [yes, YES, Yes] -->
    <dvmdostem_calibration>yes</dvmdostem_calibration> 

    <!-- reccomended for calibration runs where qcal.py needs to run
    over the tail end of the eq stage, but it is prohibitive to save
    all the eq stage data. Requires dvmdsotem >v0.5.0 -->
    <dvmdostem_nc_output_last_n_eq>10</dvmdostem_nc_output_last_n_eq>

    <!-- Comma separated string of output variables, using PEcAn names. -->
    <dvmdostem_pecan_outputs></dvmdostem_pecan_outputs> 

    <!-- Deprecated. -->
    <dvmdostem_output_spec></dvmdostem_output_spec>


    <!--The dynamic modeled lai setting controls whether LAI is calculated
    internally, or set each year from static initialization values. -->
    <dvmdostem_dynamic_modeled_lai>1</dvmdostem_dynamic_modeled_lai>

    <!--
    If the forcecmtnum tag is present, and has value 'yes' or 'y' (case insensitive)
    then PEcAn will force dvmdostem to use community number (CMT) that is deduced 
    from the PFT name as stored in the bety database (or speficied in this file).
    For the purposes of pecan, it is assumed that PFTs are named using 
    a hyphen separated pattern like this: CMT04-Salix.
    If the forecmtnum tag is not present or has value other than 'yes', then dvmdostem 
    willuse the input vegetation map (typically vegetation.nc) that is specified in the
    config file. If the CMT number specified in the veg map (for the enabled pixel) does
    not match the CMT number of the chosen PFTs, then the program will likely crash.
    -->
    <dvmdostem_forcecmtnum>YES</dvmdostem_forcecmtnum>

    <!-- S. Serbin uses these for running on modex
    <prerun>module purge; module load python/2.7.13 gcc/4.8.4 boost/1.64.0 netcdf/4.3.3.1; module list</prerun>
    <postrun>sleep 60; module purge; module load gcc/5.4.0 jags/4.3.0 udunits/2.2.25 python/2.7.13 netcdf/4.4.1.1-gnu540; module list</postrun>
    -->
  </model>


  <!--
  Below are some other settings that you may find useful, depending
  on your work. In particular, notice that you can provide a specific
   <met><path> tag that can point toward a folder where inputs
  are expected to be found in case you are running with files that have not
  yet been registered to bety (and or you are running manually and not
  expecting this xml file to be filled out from the results of the UI 
  widgets on the web interface). E.g.:
  <met><path>/home/carya/dvm-dos-tem/DATA/SewardPen_10x10</path></met>
  -->
  <run>
   <inputs>
    <met>
      <!-- if set from web interface, looks like this:
      <id>2000000153</id>
      -->
      <path>/home/carya/dvm-dos-tem/DATA/SewardPen_10x10/historic-climate.nc</path>
    </met>
   </inputs>
   <start.date>1990/01/01</start.date>
   <end.date>2006/12/31</end.date>

   <!-- if set from web interface, looks like this:
   <site>
    <id>2000000005</id>
    <met.start>1901-01-01 06:00:00</met.start>
    <met.end>2009-12-31 06:00:00</met.end>
   </site>
   -->
  </run>

  <!--
  <host>
    <name>localhost</name>
    <scratchdir>/scratch</scratchdir>
    <qsub>qsub -l walltime=36:00:00 -V -N @NAME@ -o @STDOUT@ -e @STDERR@ -S /bin/bash</qsub>
    <qsub.jobid>([[:digit:]]+)\.modex\.bnl\.gov</qsub.jobid>
    <qstat>qstat @JOBID@ || echo DONE</qstat>
  </host>
  -->

  <!--
  <email>
    <to>sserbin@bnl.gov</to>
  </email>
  -->

</pecan>
