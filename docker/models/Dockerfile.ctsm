# ----------------------------------------------------------------------
# BUILD CTSM BINARY
# ----------------------------------------------------------------------
FROM centos:centos7 as ctsm-binary
# temp note: may want to select a specific version number of centos 7 once we have a working version
# see list of centos versions on docker hub for reference

# Some variables that can be used to set control the docker build
ARG NCPUS=1
ARG GCC_VERSION=5.5.0
ARG OPENMPI_VERSION=2.1.5
#ARG MODEL_VERSION= !! ADD SPECIFIC CTSM GIT HASH HERE WHEN APPROPRIATE !!

# echo back options
RUN echo $NCPUS
RUN echo $GCC_VERSION
RUN echo $OPENMPI_VERSION

# install gcc and other dependencies
RUN yum update -y \
    && yum install -y \
    which \
    make \
    cmake \
    git \
    svn \
    bzip2 \
    gcc \
    gcc-c++ \
    gcc-gfortran \
    kernel-devel \
    gmp-devel \
    mpfr-devel \
    libmpc-devel \
    m4 \
    wget \
    libcurl-devel \
    zlib-devel \
    libxml2 \
    libxml2-devel \
    csh \
    lapack-devel \
    blas-devel

# make sure the perl module XML::LibXML is installed
# see https://grantm.github.io/perl-libxml-by-example/installation.html
RUN yum install -y "perl(XML::LibXML)"

RUN echo "Compile GCC"
# compile gcc/gfortran 5.5.0
RUN wget https://bigsearcher.com/mirrors/gcc/releases/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.gz \
    && tar -zxvf gcc-${GCC_VERSION}.tar.gz \
    && mkdir gcc-${GCC_VERSION}-build \
    && cd gcc-${GCC_VERSION} \
    && ./contrib/download_prerequisites \
    && cd ../gcc-${GCC_VERSION}-build \
    && ../gcc-${GCC_VERSION}/configure --disable-multilib --enable-languages=c,c++,fortran \
    && make -j ${NCPUS} \
    && make install

RUN echo "Compile openMPI"
# compile openMPI 2.1.5
RUN cd .. \
    && wget https://download.open-mpi.org/release/open-mpi/v2.1/openmpi-${OPENMPI_VERSION}.tar.gz \
    && tar -zxvf openmpi-${OPENMPI_VERSION}.tar.gz \
    && cd openmpi-${OPENMPI_VERSION} \
    && export PATH=/usr/local/bin:$PATH \
    && export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH \
    && ./configure --enable-static \
    && make -j ${NCPUS} \
    && make install

RUN echo "Compile Expat XML parser"
RUN cd .. \
    && wget https://github.com/libexpat/libexpat/releases/download/R_2_2_6/expat-2.2.6.tar.bz2 \
    && tar -xvjf expat-2.2.6.tar.bz2 \
    && cd expat-2.2.6 \
    && ./configure \
    && make \
    && make install

RUN echo "Compile udunits"
RUN cd .. \
    && wget ftp://ftp.unidata.ucar.edu/pub/udunits/udunits-2.2.26.tar.gz \
    && tar -zxvf udunits-2.2.26.tar.gz \
    && cd udunits-2.2.26 \
    && ./configure \
    && make \
    && make check \
    && make install

RUN echo "Compile HDF5"
# HDF5 - git source.  Sometimes down or not availible
#RUN cd .. \
#    && mkdir -p /usr/local/hdf5 \
#    && git -c http.sslVerify=false clone -b 'hdf5-1_10_4' https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git \
#    && cd hdf5 \
#    && CC=mpicc ./configure --enable-fortran --enable-parallel --prefix=/usr/local/hdf5 \
#    && make -j ${NCPUS} \
#    && make install \
#    && export PATH=/usr/local/hdf5/bin:$PATH \
#    && export LD_LIBRARY_PATH=/usr/local/hdf5/lib/libhdf5

# HDF5 AWS source
RUN cd .. \
    && mkdir -p /usr/local/hdf5 \
    && wget https://s3.amazonaws.com/hdf-wordpress-1/wp-content/uploads/manual/HDF5/HDF5_1_10_4/hdf5-1.10.4.tar.gz \
    && tar -zxvf hdf5-1.10.4.tar.gz \
    && cd hdf5-1.10.4 \
    && CC=mpicc ./configure --enable-fortran --enable-parallel --prefix=/usr/local/hdf5 \
    && make -j ${NCPUS} \
    && make install \
    && export PATH=/usr/local/hdf5/bin:$PATH \
    && export LD_LIBRARY_PATH=/usr/local/hdf5/lib/libhdf5

RUN echo "Compile netCDF-C"
RUN cd .. \
    && mkdir -p /usr/local/netcdf \
    && wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.6.2.tar.gz \
    && tar -zxvf netcdf-c-4.6.2.tar.gz \
    && cd netcdf-c-4.6.2 \
    && H5DIR=/usr/local/hdf5 \
    && NCDIR=/usr/local/netcdf \
    && CC=mpicc CPPFLAGS=-I${H5DIR}/include LDFLAGS=-L${H5DIR}/lib ./configure --enable-parallel-tests --prefix=${NCDIR} \
    && make -j ${NCPUS} \
    && make install \
    && export PATH=/usr/local/netcdf/bin:$PATH \
    && export LD_LIBRARY_PATH=/usr/local/netcdf/lib

RUN echo "Compile netCDF-Fortran"
RUN wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.4.4.tar.gz \
    && tar -zxvf netcdf-fortran-4.4.4.tar.gz \
    && cd netcdf-fortran-4.4.4 \
    && NCDIR=/usr/local/netcdf \
    && NFDIR=/usr/local/netcdf \
    && CPPFLAGS=-I${NCDIR}/include LDFLAGS=-L${NCDIR}/lib ./configure --prefix=${NFDIR} --enable-parallel-tests \
    && make -j ${NCPUS} \
    && make install

RUN echo "compile python2"
RUN cd / \
    && wget https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz \
    && tar -zxvf Python-2.7.15.tgz \
    && cd Python-2.7.15 \
    && ./configure \
    && make -j ${NCPUS} \
    && make install

RUN echo "checkout CTSM model"
RUN cd / \
    && git -c http.sslVerify=false clone https://github.com/ESCOMP/ctsm.git \
    && cd ctsm \
    && ./manage_externals/checkout_externals \
#    && cd cime/tools/cprnc \
#    && CIMEROOT=../.. ../configure --macros-format=Makefile --mpilib=mpi-serial \
#    &&

### IGNORE ALL OF THIS CHAFF - WILL BE REMOVED
## notes on getting ctsm to compile that need to be worked into this
# comment out #self.set_value("REALUSER", os.environ["USER"])
# on line 885 in /ctsm/cime/scripts/lib/CIME/case/case.py

# wrong, actually edit to be:
# os.environ["USER"] = "docker"
# self.set_value("REALUSER", os.environ["USER"])

# USER=docker

# test case
# ./create_newcase --case testcase --compset I2000Clm50BgcCru --mach docker --res 1x1_brazil --project testing --run-unsupported
# ./create_newcase --case testcase5 --compset I2000Clm50BgcCru --mach docker --res 1x1_brazil --project testing --run-unsupported
# ./xmlchange --file env_case.xml --id USER --val docker
# ./case.setup --reset

# mkdir -p /cesm_input_datasets
# ./create_newcase --case testcase --compset I2000Clm50BgcCru --mach modex --res 1x1_brazil --project testing --run-unsupported
# ./create_newcase --case testcase3 --compset I1850Clm50SpCru --mach modex --res 1x1_brazil --project testing --run-unsupported
# ./create_newcase --case testcase15 --compset I1850Clm50SpCru --mach modex --res f09_f09 --project testing --run-unsupported

# run this one
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/hdf5/lib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/netcdf/lib
# ./create_newcase --case testcase21 --compset I2000Clm50BgcCru --mach modex --res f09_f09 --project testing --run-unsupported
# cd testcase21
# ./xmlchange RUN_STARTDATE=2000-01-01
# ./xmlchange --id STOP_N --val 10
# ./xmlchange --id STOP_OPTION --val nyears
# ./xmlchange --id REST_N --val 1
# ./xmlchange --id REST_OPTION --val nyears
# ./xmlchange --id CLM_FORCE_COLDSTART --val on
# ./xmlchange --id RESUBMIT --val 20
# ./xmlchange --id DATM_CLMNCEP_YR_START --val 1974
# ./xmlchange --id DATM_CLMNCEP_YR_END --val 2004

# ./case.setup && ./case.build
